<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SavingAnalyticObjects />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='director+ (dw)' inline='true' name='federated.0roe8tg0s2e6sd1cgyyi00qr9blq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mariadb.0a0mt5h19ifocs1bkxbzd159igb4'>
            <connection class='mariadb' dbname='dw' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='user_satisfaction' table='[user_satisfaction]' type='table' />
          <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='director' table='[director]' type='table' />
          <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='economic_results' table='[economic_results]' type='table' />
          <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='time' table='[time]' type='table' />
          <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='producer' table='[producer]' type='table' />
          <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='production_company' table='[production_company]' type='table' />
        </relation>
        <cols>
          <map key='[cost]' value='[economic_results].[cost]' />
          <map key='[director (user_satisfaction)]' value='[user_satisfaction].[director]' />
          <map key='[director]' value='[economic_results].[director]' />
          <map key='[emission_time]' value='[user_satisfaction].[emission_time]' />
          <map key='[id (producer)]' value='[producer].[id]' />
          <map key='[id (production_company)]' value='[production_company].[id]' />
          <map key='[id (time)]' value='[time].[id]' />
          <map key='[id]' value='[director].[id]' />
          <map key='[id_production_company]' value='[production_company].[id_production_company]' />
          <map key='[income]' value='[economic_results].[income]' />
          <map key='[month]' value='[time].[month]' />
          <map key='[month_text]' value='[time].[month_text]' />
          <map key='[name (producer)]' value='[producer].[name]' />
          <map key='[name (production_company)]' value='[production_company].[name]' />
          <map key='[name]' value='[director].[name]' />
          <map key='[producer (user_satisfaction)]' value='[user_satisfaction].[producer]' />
          <map key='[producer]' value='[economic_results].[producer]' />
          <map key='[production_company (user_satisfaction)]' value='[user_satisfaction].[production_company]' />
          <map key='[production_company]' value='[economic_results].[production_company]' />
          <map key='[satisfaction]' value='[user_satisfaction].[satisfaction]' />
          <map key='[text_id (producer)]' value='[producer].[text_id]' />
          <map key='[text_id]' value='[director].[text_id]' />
          <map key='[time]' value='[economic_results].[time]' />
          <map key='[votes]' value='[user_satisfaction].[votes]' />
          <map key='[voting_time]' value='[user_satisfaction].[voting_time]' />
          <map key='[year]' value='[time].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>voting_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[voting_time]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>voting_time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emission_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[emission_time]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>emission_time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>20</remote-type>
            <local-name>[director (user_satisfaction)]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_company</remote-name>
            <remote-type>20</remote-type>
            <local-name>[production_company (user_satisfaction)]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>production_company</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>producer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[producer (user_satisfaction)]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>producer</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>satisfaction</remote-name>
            <remote-type>131</remote-type>
            <local-name>[satisfaction]</local-name>
            <parent-name>[user_satisfaction]</parent-name>
            <remote-alias>satisfaction</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[director]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[director_8CC2A402C06642A9AB4A5374F74ECC88]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text_id]</local-name>
            <parent-name>[director]</parent-name>
            <remote-alias>text_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[director_8CC2A402C06642A9AB4A5374F74ECC88]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[director]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[director_8CC2A402C06642A9AB4A5374F74ECC88]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[economic_results]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[economic_results_5E1BCA62E377483EABA686BA991F3E33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>20</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[economic_results]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[economic_results_5E1BCA62E377483EABA686BA991F3E33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_company</remote-name>
            <remote-type>20</remote-type>
            <local-name>[production_company]</local-name>
            <parent-name>[economic_results]</parent-name>
            <remote-alias>production_company</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[economic_results_5E1BCA62E377483EABA686BA991F3E33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>producer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[producer]</local-name>
            <parent-name>[economic_results]</parent-name>
            <remote-alias>producer</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[economic_results_5E1BCA62E377483EABA686BA991F3E33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[economic_results]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>0</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[economic_results_5E1BCA62E377483EABA686BA991F3E33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>131</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[economic_results]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>0</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[economic_results_5E1BCA62E377483EABA686BA991F3E33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (time)]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[time_EF4097036BA24A17AD78544864A3D219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[time_EF4097036BA24A17AD78544864A3D219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[time_EF4097036BA24A17AD78544864A3D219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month_text]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>month_text</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[time_EF4097036BA24A17AD78544864A3D219]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (producer)]</local-name>
            <parent-name>[producer]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[producer_4530B282275246E38D25CC3E1D921F33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text_id (producer)]</local-name>
            <parent-name>[producer]</parent-name>
            <remote-alias>text_id</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[producer_4530B282275246E38D25CC3E1D921F33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (producer)]</local-name>
            <parent-name>[producer]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[producer_4530B282275246E38D25CC3E1D921F33]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (production_company)]</local-name>
            <parent-name>[production_company]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[production_company_DD176A7303E34BDF9C4F580EA2EB817A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_production_company</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_production_company]</local-name>
            <parent-name>[production_company]</parent-name>
            <remote-alias>id_production_company</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[production_company_DD176A7303E34BDF9C4F580EA2EB817A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (production_company)]</local-name>
            <parent-name>[production_company]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[production_company_DD176A7303E34BDF9C4F580EA2EB817A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='profit' datatype='integer' name='[Calculation_410672014728609792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[income]-[cost]' />
      </column>
      <column caption='director' datatype='table' name='[__tableau_internal_object_id__].[director_8CC2A402C06642A9AB4A5374F74ECC88]' role='measure' type='quantitative' />
      <column caption='economic_results' datatype='table' name='[__tableau_internal_object_id__].[economic_results_5E1BCA62E377483EABA686BA991F3E33]' role='measure' type='quantitative' />
      <column caption='producer' datatype='table' name='[__tableau_internal_object_id__].[producer_4530B282275246E38D25CC3E1D921F33]' role='measure' type='quantitative' />
      <column caption='production_company' datatype='table' name='[__tableau_internal_object_id__].[production_company_DD176A7303E34BDF9C4F580EA2EB817A]' role='measure' type='quantitative' />
      <column caption='time' datatype='table' name='[__tableau_internal_object_id__].[time_EF4097036BA24A17AD78544864A3D219]' role='measure' type='quantitative' />
      <column caption='user_satisfaction' datatype='table' name='[__tableau_internal_object_id__].[user_satisfaction_90442C3BFC0E4661B067AA1257C522B4]' role='measure' type='quantitative' />
      <column caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Director (User Satisfaction)' datatype='real' name='[director (user_satisfaction)]' role='dimension' type='quantitative' />
      <column caption='Director' datatype='real' name='[director]' role='measure' type='quantitative' />
      <column caption='Emission Time' datatype='real' name='[emission_time]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Id (Producer)' datatype='real' name='[id (producer)]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Id (Production Company)' datatype='real' name='[id (production_company)]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Id (Time)' datatype='real' name='[id (time)]' role='dimension' type='quantitative' />
      <column caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal' />
      <column caption='Id Production Company' datatype='integer' name='[id_production_company]' role='dimension' type='ordinal' />
      <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Month Text' datatype='string' name='[month_text]' role='dimension' type='nominal' />
      <column caption='Name (Producer)' datatype='string' name='[name (producer)]' role='dimension' type='nominal' />
      <column caption='Name (Production Company)' datatype='string' name='[name (production_company)]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Producer (User Satisfaction)' datatype='real' name='[producer (user_satisfaction)]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Producer' datatype='real' name='[producer]' role='dimension' type='quantitative' />
      <column caption='Production Company (User Satisfaction)' datatype='real' name='[production_company (user_satisfaction)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Production Company' datatype='real' name='[production_company]' role='dimension' type='quantitative' />
      <column caption='Satisfaction' datatype='real' name='[satisfaction]' role='measure' type='quantitative' />
      <column caption='Text Id (Producer)' datatype='string' name='[text_id (producer)]' role='dimension' type='nominal' />
      <column caption='Text Id' datatype='string' name='[text_id]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Time' datatype='real' name='[time]' role='dimension' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Voting Time' datatype='real' name='[voting_time]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[name (producer)]' derivation='Attribute' name='[attr:name (producer):nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_410672014728609792]' derivation='Avg' name='[avg:Calculation_410672014728609792:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Avg' name='[avg:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_410672014728609792]' derivation='None' name='[none:Calculation_410672014728609792:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cost]' derivation='None' name='[none:cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='None' name='[none:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[income]' derivation='Stdev' name='[std:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_410672014728609792]' derivation='Sum' name='[sum:Calculation_410672014728609792:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cost]' derivation='Sum' name='[sum:cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Var' name='[var:income:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Andrew Stanton, Angus MacLane&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Levinson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Sonnenfeld&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ben Garant&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boaz Yakin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Williams, Don Hall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David O. Russell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Yates&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gary David Goldberg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gavin O&apos;Connor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;James Foley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeff Nichols&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe Johnston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Moore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Polson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keenen Ivory Wayans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenneth Branagh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kevin Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kevin Lima&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kevin Munroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kinka Usher&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marc Webb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthijs van Heijningen Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Apted&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nancy Meyers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paul Thomas Anderson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peter Hedges&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R.J. Cutler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Benjamin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rob Thomas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ron Clements, John Musker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spike Lee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stefen Fangmeier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tom Hooper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wes Ball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhang Yimou&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alan J. Pakula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Proyas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Adamson, Kelly Asbury, Conrad Vernon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Fleming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bill Condon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bruce A. Evans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bruce Beresford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Gillespie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;David R. Ellis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des McAnuff&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E. Elias Merhige&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Francis Lawrence&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gary Ross&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Geoffrey Sax&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Clooney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greg McLean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greg Mottola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jim Gillespie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;John Hamburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karey Kirkpatrick, Tim Johnson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mark Tonderai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michael Patrick Jann&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nanette Burstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peter Cattaneo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philip Kaufman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robert Luketic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robert Schwentke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roberts Gannaway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ruben Fleischer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rupert Wyatt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shuki Levy, David Winning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steve &apos;Spaz&apos; Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steve Beck&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steven Spielberg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tod Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walter Salles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akiva Goldsman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alan Shapiro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aleksander Bach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrew Bergman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrew Davis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antoine Fuqua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bob Odenkirk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brian Helgeland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Byron Howard, Nathan Greno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dan Scanlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Danny Boyle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David Lowery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Dugan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Don Scardino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;F. Gary Gray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gary Sinyor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Algar, Don Hahn, Gaëtan Brizzi, Paul Brizzi, Eric Goldberg, Hendel Butoy, Francis Glebas, Pixote Hunt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jaume Collet-Serra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jimmy Hayward, Steve Martino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Curran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Fortenberry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Lasseter, Joe Ranft&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kelly Asbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin Scorsese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Vaughn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pat O&apos;Connor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peter Atencio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peter Billingsley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peter Hyams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roger Donaldson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roger Kumble&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Simon West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stephen Anderson, Don Hall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steve Carr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Walter Hill, Jack Sholder&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warren Beatty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wes Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alejandro Agresti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andy Fickman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brad Silberling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bryan Spicer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charles S. Dutton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clint Eastwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis Guggenheim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deb Hagan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Doug Liman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Shore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;George A. Romero&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James Isaac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jean-Claude Van Damme&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jennifer Yuh Nelson, Alessandro Carloni&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Abrahams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John A. Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Bonito&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joseph Kahn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kirsten Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcus Nispel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicholas Stoller&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nimród Antal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Greengrass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peter Lord, Jeff Newitt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raja Gosnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rand Ravich&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richard Kelly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rod Lurie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seth MacFarlane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steven Zaillian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Takashi Shimizu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tim Burton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tim Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tommy Wirkola&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walter Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;William Friedkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alan Taylor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andy Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brad Bird&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedric Nicolas-Troyan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Charles Martin Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Koch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christian Duguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Conrad Vernon, Greg Tiernan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Silverman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Soren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Don Michael Paul, Bibo Bergeron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Doug Sweetland, Nicholas Stoller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frank Marshall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gore Verbinski&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harald Zwart&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeff Tremaine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jonathan Lynn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jonathan Mostow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Josef Rusnak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle Balda, Chris Renaud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lawrence Guterman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mark Dindal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Hoffman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mike Binder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Park, Peter Lord&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peter Segal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Renny Harlin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rob Cohen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ron Shelton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sam Raimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steven Brill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stiles White&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taylor Hackford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tom McCarthy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Travis Cluff, Chris Lofing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Xavier Gens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akiva Schaffer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alister Grierson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ash Brannon, Chris Buck&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ashwani Dhir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brad Peyton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brett Ratner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Byron Howard, Rich Moore, Jared Bush&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameron Crowe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Daniel Espinosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Donald Petrie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Félix Enríquez Alcalá&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Francis Ford Coppola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gil Kenan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Griffin Dunne, Peter Farrelly, Elizabeth Banks, Brett Ratner, James Gunn, Steven Brill, Steve Carr, Rusty Cundieff, James Duffy, Patrik Forsberg, Jonathan van Tulleken, Will Graham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hugh Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jean-Jacques Annaud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeb Stuart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jim Field Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jon Favreau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jonathan Demme&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kevin Costner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kimberly Peirce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Balda, Pierre Coffin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mathieu Kassovitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Cristofer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Dougherty&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michele Placido&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neil LaBute&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicholas Hytner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pierre Coffin, Chris Renaud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rob Minkoff&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rob Pritts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scott Silver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamra Davis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ted Demme&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;William Malone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angelina Jolie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anthony Minghella&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Stiller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brian Taylor, Mark Neveldine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chris Miller, Raman Hui&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa-Gavras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;David Wain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deborah Kaplan, Harry Elfont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denzel Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gary Fleder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Gray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James L. Brooks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Wan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jessy Terrero&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John Whitesell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jonathan Frakes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jun Falkenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Scott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lauren Lazin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mark Rosman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michael Mayer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morten Tyldum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Penny Marshall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peter Berg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phil Lord, Christopher Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Marshall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Towne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roger Christian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shawn Levy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stephen Hillenburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stephen Sommers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steve Hickner, Simon J. Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Susanne Bier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrence Malick&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tim Story&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Will Gluck&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adam Rifkin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anthony Russo, Joe Russo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barbet Schroeder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bryan Singer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D.J. Caruso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Darnell, Tom McGrath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glenn Ficarra, John Requa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glenn Gordon Caron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gregory Plotkin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;J.B. Rogers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jay Chandrasekhar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jean-Marc Vallée&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Coen, Ethan Coen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Woo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jon Hurwitz, Hayden Schlossberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karyn Kusama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luke Scott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matt Bettinelli-Olpin, Tyler Gillett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Judge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Tollin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mira Nair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Neil Burger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Neil Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norman Jewison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olatunde Osunsanmi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peter Chelsom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peter Ramsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ridley Scott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rob Bowman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ron Howard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sara Sugarman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sean McNamara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shekhar Kapur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sydney Pollack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Todd Lincoln &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tom Dey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adam McKay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alexandre Aja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andrzej Bartkowiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ang Lee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brian De Palma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brian Robbins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catherine Hardwicke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher McQuarrie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Conrad Vernon, Eric Darnell, Tom McGrath&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dennie Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garth Jennings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry Selick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoyt Yeatman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hugh Johnson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ivan Reitman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James DeMonaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jesse Dylan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Singleton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jorma Taccone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Kosinski&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joss Whedon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Osborne, John Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Lembeck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike Figgis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike Mitchell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norton Virgien, Igor Kovalyov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pete Travis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Randall Wallace&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richard LaGravenese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robert Rodriguez, Ethan Maniquis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shane Black&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephen Kessler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Field&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tom Shadyac&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tony Scott&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wayne Wang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zack Snyder&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew Niccol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bobby Farrelly, Peter Farrelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonnie Hunt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Weitz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David McNally&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Slade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garry Marshall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gary Winick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;George Nolfi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;James Bobin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;James Cameron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jason Reitman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joe Dante&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Madden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ken Kwapis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liz Friedlander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marc Lawrence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martin Campbell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigel Cole&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paul Feig&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paul Weiland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Landesman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Phil Alden Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Michell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scott Cooper&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seth Rogen, Evan Goldberg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sofia Coppola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stephen Gaghan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stephen Norrington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steve Miner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steve Oedekerk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sylvain White&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tim Johnson, Patrick Gilmore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tom Ford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vondie Curtis-Hall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Werner Herzog&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alex Kurtzman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Audrey Wells&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ben Falcone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bill Paxton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bronwen Hughes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charles Shyer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christian Robinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Courtney Solomon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dan Trachtenberg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;David Dobkin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ed Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabriele Muccino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry Joost, Ariel Schulman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jeremiah S. Chechik&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Boorman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Sayles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Lin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kevin Bray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Len Wiseman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Les Mayfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miguel Arteta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike McCoy, Scott Waugh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nick Moore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Abascal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul W.S. Anderson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peyton Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richard Donner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert De Niro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rupert Sanders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryan Murphy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stephen Herek&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steve Trenbirth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steven Quale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Susanna White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tony Bancroft, Barry Cook&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wes Craven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Shankman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Tennant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brendan Malloy, Emmett Malloy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charles Stone III&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Carter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cody Cameron, Kris Pearn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colin Strause, Greg Strause&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curtis Hanson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;David Ayer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Demian Lichtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eric Brevig&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gareth Edwards&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gregory Hoblit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;James Mangold&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jay Roach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joel Coen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Bruno&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Schlesinger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Josh Boone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joshua Michael Stern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larry Charles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marc Forster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marco Schnabel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark A.Z. Dippé&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Dowse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niki Caro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nora Ephron&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rawson Marshall Thurber&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richard Linklater&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Robert C. Cooper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shana Feste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shane Acker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shusuke Kaneko&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tate Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timur Bekmambetov&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tony Gilroy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wolfgang Petersen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alfonso Cuarón&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Angela Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brian Levant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chris Columbus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clark Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David Fincher&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Diane Keaton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eric Bress, J. Mackye Gruber&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gil Junger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gina Prince-Bythewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iain Softley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jason Friedberg, Aaron Seltzer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joe Wright&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Erick Dowdle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John McTiernan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Stockwell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jon Lucas, Scott Moore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jonathan Liebesman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevin Macdonald&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louis Leterrier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Waters&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michael Mann&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mike Nichols&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Verhoeven&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pete Docter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Phil Traill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reginald Hudlin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Gervais, Matthew Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Risa Bramon Garcia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robert Rodriguez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robin Budd, Donovan Cook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ron Underwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam Mendes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seth Gordon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stuart Baird&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tim Miller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anand Tucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anthony Hemingway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baz Luhrmann&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad Stahelski, David Leitch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chris Renaud&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;David Gordon Green&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;David Hogan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edgar Wright&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eric Darnell, Tim Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frank Oz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giuseppe Tornatore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hayao Miyazaki&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J Blakeson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J.J. Abrams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jason Winer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jeff Schaffer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jon Amiel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kevin Reynolds&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luc Besson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luis Llosa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michael McCullers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mike Bigelow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mimi Leder&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oliver Parker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul McGuigan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peter Howitt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Phillip Noyce&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rick Famuyiwa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ringo Lam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sam Weisman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scott Waugh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spike Jonze&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Susannah Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terry Zwigoff&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vadim Perelman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andrucha Waddington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anne Fletcher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry W. Blaustein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bennett Miller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brenda Chapman, Mark Andrews, Steve Purcell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charles Herman-Wurmfeld&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chuck Russell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danny Leiner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Nutter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean Israelite&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Genndy Tartakovsky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;James Gunn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;James Wong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jared Hess&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Nussbaum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John R. Leonetti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kathryn Bigelow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kelly Asbury, Lorna Cook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kerry Conran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kevin Tancharoen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lee Tamahori&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liam Lynch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matthew O&apos;Callaghan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Caton-Jones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mike Newell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Noam Murro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paul Tibbitt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ralph Zondag, Eric Leighton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richard Curtis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roland Emmerich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sergei Bodrov&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sharon Maguire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Boyum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Soderbergh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas Bezucha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas Carter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Will Finn, John Sanford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alan Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andrew Stanton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baltasar Kormákur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carl Franklin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danny Cannon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Cronenberg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David S. Goyer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Doug Ellin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Coraci&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Darabont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frederik Du Chau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gus Van Sant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jake Szymanski&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jean-Pierre Jeunet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lasseter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Schultz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jonathan Kaplan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kevin Rodney Sullivan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirk Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lasse Hallström&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Rymer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miguel Sapochnik&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Cassavetes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter Weir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitof&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quentin Tarantino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rob Reiner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean Anders&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Simon Wells, Steve Hickner, Brenda Chapman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steve Pink&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stewart Hendler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Terry Gilliam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thor Freudenthal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Burton, Mike Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Todd Phillips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tony Kaye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andrew Adamson, Vicky Jenson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bille Woodruff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Wedge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Christopher B. Landon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Daisy von Scherler Mayer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;David Koepp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominic Sena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fergal Reilly, Clay Kaytis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gary Goldman, Don Bluth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gary Trousdale, Kirk Wise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jake Kasdan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James McTeigue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jim Sheridan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jimmy Hayward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Schumacher&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Lee Hancock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jon M. Chu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jon Turteltaub&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenneth Johnson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kevin Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martin Brest&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Bay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Ritchie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olivier Megaton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peter Hewitt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peter Sohn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Zemeckis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rod Hardy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samuel Bayer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Hicks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Simon Wells&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Simon Wincer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stephen Daldry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steve Box, Nick Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tom Hanks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vicky Jenson, Bibo Bergeron, Rob Letterman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alexander Payne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ben Gluck, Anthony Bell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brandon Camp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chris Buck, Kevin Lima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colin Trevorrow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;David E. Talbert&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dean Parisot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drew Barrymore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edward Norton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;George Miller&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guillermo del Toro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Ritchie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harold Becker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hironobu Sakaguchi, Motonori Sakakibara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jan de Bont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jerry Zucker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jessie Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Carnahan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Carpenter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Herzfeld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Josh Trank&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lawrence Kasdan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lilly Wachowski, Lana Wachowski&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Steven Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mike Mitchell, Walt Dohrn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Neill Blomkamp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oliver Hirschbiegel, James McTeigue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P.J. Hogan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Weitz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phil Joanou&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robert Redford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ryan Coogler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephen Hopkins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tarsem Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tim Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ulu Grosbard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alejandro González Iñárritu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bob Spiers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brad Bird, Jan Pinkava&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christian Ditter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Darren Aronofsky&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dave Green&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duncan Jones&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edward Zwick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Francine McDougall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wolf&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gavin Hood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harold Ramis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeff Wadlow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jennifer Yuh Nelson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Frankenheimer, Richard Stanley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jorge R. Gutierrez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;José Padilha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Schwartz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Judd Apatow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lee Unkrich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luke Greenfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M. Night Shyamalan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matt Reeves&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikael Håfström&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mike Flanagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nikhil Advani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peter Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peter Sollett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Butler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ronny Yu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stanley Kubrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephen Frears&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephen J. Anderson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephen T. Kay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tom Vaughan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vicky Jenson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Agustín Díaz Yanes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andrew Dominik&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andy Muschietti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antony Hoffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ben Affleck&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Betty Thomas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burr Steers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Sanders, Dean DeBlois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Weitz, Paul Weitz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christopher Nolan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dan Cutforth, Jane Lipsitz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;David Frankel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denis Villeneuve&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derek Cianfrance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dexter Fletcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ernest R. Dickerson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Etan Cohen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Florian Henckel von Donnersmarck&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gregory Poirier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Griffin Dunne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jay Russell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Lasseter, Brad Lewis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keanu Reeves&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malcolm D. Lee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marcus Raboy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Williams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mel Gibson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Patrick King&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil Marshall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oliver Stone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phyllida Lloyd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richard Loncraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rob Letterman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Derrickson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sylvester Stallone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Todd Strauss-Schulson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:cost:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:Calculation_410672014728609792:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:Calculation_410672014728609792:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:Calculation_410672014728609792:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[std:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[var:income:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;España&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id (time)' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_text' />
      </field-sort-info>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{1a6ce16d-bfb4-42d9-82e8-ae61e630e65f}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[attr:name (producer):nk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>50</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{418c3e17-c45c-40ee-ad87-3e66203fccca}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[attr:name:nk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <object-graph>
        <objects>
          <object caption='director' id='director_8CC2A402C06642A9AB4A5374F74ECC88'>
            <properties context=''>
              <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='director' table='[director]' type='table' />
            </properties>
          </object>
          <object caption='economic_results' id='economic_results_5E1BCA62E377483EABA686BA991F3E33'>
            <properties context=''>
              <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='economic_results' table='[economic_results]' type='table' />
            </properties>
          </object>
          <object caption='producer' id='producer_4530B282275246E38D25CC3E1D921F33'>
            <properties context=''>
              <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='producer' table='[producer]' type='table' />
            </properties>
          </object>
          <object caption='production_company' id='production_company_DD176A7303E34BDF9C4F580EA2EB817A'>
            <properties context=''>
              <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='production_company' table='[production_company]' type='table' />
            </properties>
          </object>
          <object caption='time' id='time_EF4097036BA24A17AD78544864A3D219'>
            <properties context=''>
              <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='time' table='[time]' type='table' />
            </properties>
          </object>
          <object caption='user_satisfaction' id='user_satisfaction_90442C3BFC0E4661B067AA1257C522B4'>
            <properties context=''>
              <relation connection='mariadb.0a0mt5h19ifocs1bkxbzd159igb4' name='user_satisfaction' table='[user_satisfaction]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[director (user_satisfaction)]' />
              <expression op='[id]' />
            </expression>
            <first-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' object-id='user_satisfaction_90442C3BFC0E4661B067AA1257C522B4' />
            <second-end-point is-db-set-unique-key='true' object-id='director_8CC2A402C06642A9AB4A5374F74ECC88' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[director]' />
            </expression>
            <first-end-point is-db-set-unique-key='true' object-id='director_8CC2A402C06642A9AB4A5374F74ECC88' unique-key='true' />
            <second-end-point object-id='economic_results_5E1BCA62E377483EABA686BA991F3E33' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[producer (user_satisfaction)]' />
              <expression op='[id (producer)]' />
            </expression>
            <first-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' object-id='user_satisfaction_90442C3BFC0E4661B067AA1257C522B4' />
            <second-end-point is-db-set-unique-key='true' object-id='producer_4530B282275246E38D25CC3E1D921F33' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[production_company (user_satisfaction)]' />
              <expression op='[id (production_company)]' />
            </expression>
            <first-end-point object-id='user_satisfaction_90442C3BFC0E4661B067AA1257C522B4' />
            <second-end-point is-db-set-unique-key='true' object-id='production_company_DD176A7303E34BDF9C4F580EA2EB817A' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[time]' />
              <expression op='[id (time)]' />
            </expression>
            <first-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' object-id='economic_results_5E1BCA62E377483EABA686BA991F3E33' />
            <second-end-point is-db-set-unique-key='true' object-id='time_EF4097036BA24A17AD78544864A3D219' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Promedio satisfación y beneficios por año'>
      <table>
        <view>
          <datasources>
            <datasource caption='director+ (dw)' name='federated.0roe8tg0s2e6sd1cgyyi00qr9blq' />
          </datasources>
          <datasource-dependencies datasource='federated.0roe8tg0s2e6sd1cgyyi00qr9blq'>
            <column caption='profit' datatype='integer' name='[Calculation_410672014728609792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[income]-[cost]' />
            </column>
            <column-instance column='[Calculation_410672014728609792]' derivation='Avg' name='[avg:Calculation_410672014728609792:qk]' pivot='key' type='quantitative' />
            <column-instance column='[satisfaction]' derivation='Avg' name='[avg:satisfaction:qk]' pivot='key' type='quantitative' />
            <column caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Satisfaction' datatype='real' name='[satisfaction]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:Calculation_410672014728609792:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:qk] + [federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:Calculation_410672014728609792:qk])</rows>
        <cols>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{ACDB4160-6E85-4513-8BC5-6F4A99C8FDA4}' />
    </worksheet>
    <worksheet name='Satisfación por director y income'>
      <table>
        <view>
          <datasources>
            <datasource caption='director+ (dw)' name='federated.0roe8tg0s2e6sd1cgyyi00qr9blq' />
          </datasources>
          <datasource-dependencies datasource='federated.0roe8tg0s2e6sd1cgyyi00qr9blq'>
            <column-instance column='[income]' derivation='Avg' name='[avg:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[satisfaction]' derivation='Avg' name='[avg:satisfaction:qk]' pivot='key' type='quantitative' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Satisfaction' datatype='real' name='[satisfaction]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:qk]' included-values='non-null' />
          <computed-sort column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name:nk]' direction='DESC' using='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:qk]' />
          <slices>
            <column>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:income:qk]' num-steps='5' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:qk]</rows>
        <cols>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{849DCFF6-A366-4DC9-9D34-3AB10F4ECDDD}' />
    </worksheet>
    <worksheet name='benficio por director'>
      <table>
        <view>
          <datasources>
            <datasource caption='director+ (dw)' name='federated.0roe8tg0s2e6sd1cgyyi00qr9blq' />
          </datasources>
          <datasource-dependencies datasource='federated.0roe8tg0s2e6sd1cgyyi00qr9blq'>
            <column caption='profit' datatype='integer' name='[Calculation_410672014728609792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[income]-[cost]' />
            </column>
            <column caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_410672014728609792]' derivation='None' name='[none:Calculation_410672014728609792:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_410672014728609792]' derivation='Sum' name='[sum:Calculation_410672014728609792:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:Calculation_410672014728609792:qk]' included-values='in-range'>
            <min>-165710090</min>
            <max>178067337</max>
          </filter>
          <computed-sort column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name:nk]' direction='DESC' using='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:Calculation_410672014728609792:qk]' />
          <slices>
            <column>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:Calculation_410672014728609792:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:Calculation_410672014728609792:qk]' num-steps='8' palette='red_green_white_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:Calculation_410672014728609792:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name:nk]</rows>
        <cols>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:Calculation_410672014728609792:qk]</cols>
      </table>
      <simple-id uuid='{3C1760B8-7636-4BF9-808F-58C424CF9AC0}' />
    </worksheet>
    <worksheet name='income vs coste'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Coste vs Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='director+ (dw)' name='federated.0roe8tg0s2e6sd1cgyyi00qr9blq' />
          </datasources>
          <datasource-dependencies datasource='federated.0roe8tg0s2e6sd1cgyyi00qr9blq'>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column caption='Name (Production Company)' datatype='string' name='[name (production_company)]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[cost]' derivation='None' name='[none:cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income]' derivation='None' name='[none:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name (production_company)]' derivation='None' name='[none:name (production_company):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[attr:name:nk]' />
              <text column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name (production_company):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:cost:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:cost:qk]' z-order='1' />
            <reference-line axis-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:cost:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-table' value-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:cost:qk]' z-order='2' />
            <reference-line axis-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]' z-order='3' />
            <reference-line axis-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' paired-distribution-id='refline2' probability='95' scope='per-table' value-column='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-transparency' value='255' />
                <format attr='density-intensity' value='0.029787063598632812' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]</rows>
        <cols>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:cost:qk]</cols>
      </table>
      <simple-id uuid='{EF7034A7-7DE2-4444-B53B-B600A0A37F04}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{80D2D863-AB32-4C75-A876-479C469F627C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='income vs coste'>
      <cards>
        <edge name='left'>
          <strip size='187'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[:Measure Names]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[attr:name:nk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:AdhocCluster:2:ok]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:director (user_satisfaction):qk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name (producer):nk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name (production_company):nk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:production_company:qk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5C6CC76-736F-49DB-8855-3C3C6C1A0286}' />
    </window>
    <window class='worksheet' name='Satisfación por director y income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='2' param='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:income:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[avg:satisfaction:ok]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:income:qk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name:nk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:satisfaction:qk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C2986CE-7D97-474A-808E-A88CC2DB493A}' />
    </window>
    <window class='worksheet' name='benficio por director'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[sum:Calculation_410672014728609792:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:Calculation_410672014728609792:qk]</field>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0AEA6483-44BD-48BA-A702-4AB7FDD51779}' />
    </window>
    <window class='worksheet' maximized='true' name='Promedio satisfación y beneficios por año'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='32'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0roe8tg0s2e6sd1cgyyi00qr9blq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7A33294-7C0E-4F82-8E02-40284EF6C9E6}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{222B1CBF-8C18-4EEA-A006-A0F9CD30CCDD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Promedio satisfación y beneficios por año' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Satisfación por director y income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='benficio por director' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income vs coste' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
